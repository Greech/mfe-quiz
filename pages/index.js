import React, { useState } from 'react';
import { Card, CardContent } from '../components/ui/card';
import { Button } from '../components/ui/button';
import { AnimatePresence, motion } from 'framer-motion';

const questions = [
  {
    question: 'Ilu niezale≈ºnych zespo≈Ç√≥w frontendowych pracuje nad tƒÖ samƒÖ aplikacjƒÖ lub jej modu≈Çami?',
    options: [
      { label: '1 zesp√≥≈Ç', score: 0 },
      { label: '2‚Äì3 zespo≈Çy', score: 1 },
      { label: 'Wiƒôcej ni≈º 3 zespo≈Çy', score: 3 },
    ],
  },
  {
    question: 'Czy zespo≈Çy frontendowe pracujƒÖ w r√≥≈ºnych technologiach (np. Angular, React, Vue)?',
    options: [
      { label: 'Tak, celowo', score: 2 },
      { label: 'Nie, mamy jeden stack', score: 0 },
      { label: 'Jeszcze nie, ale planujemy migracje lub integracje', score: 1 },
    ],
  },
  {
    question: 'Jak du≈ºa jest autonomia poszczeg√≥lnych modu≈Ç√≥w lub domen biznesowych?',
    options: [
      { label: 'Modu≈Çy sƒÖ w pe≈Çni niezale≈ºne', score: 3 },
      { label: 'Modu≈Çy majƒÖ czƒô≈õƒá wsp√≥≈Çdzielonego kodu', score: 1 },
      { label: 'Kod jest totalnie spleciony ‚Äì wszystko zale≈ºy od wszystkiego', score: 0 },
    ],
  },
  {
    question: 'Jak czƒôsto r√≥≈ºne zespo≈Çy muszƒÖ siƒô koordynowaƒá przed deployem?',
    options: [
      { label: 'Ka≈ºdy deployuje sam', score: 3 },
      { label: 'Czasem trzeba siƒô zsynchronizowaƒá', score: 1 },
      { label: 'Zawsze musimy robiƒá wsp√≥lny release', score: 0 },
    ],
  },
  {
    question: 'JakƒÖ macie presjƒô czasowƒÖ na dostarczenie pierwszej wersji?',
    options: [
      { label: 'Potrzebujemy MVP w kilka tygodni', score: 0 },
      { label: 'Mo≈ºemy planowaƒá d≈Çugofalowo', score: 2 },
      { label: 'Wa≈ºne jest skalowanie i d≈Çugowieczno≈õƒá, nie szybko≈õƒá', score: 3 },
    ],
  },
  {
    question: 'Czy Twoja aplikacja musi byƒá dobrze indeksowana przez wyszukiwarki (SEO) lub obs≈Çugiwaƒá SSR?',
    options: [
      { label: 'Tak, SEO to klucz', score: 1 },
      { label: 'Nie, to aplikacja tylko dla zalogowanych', score: 0 },
      { label: 'Nie wiem, ale chcemy mieƒá opcjƒô', score: 1 },
    ],
  },
  {
    question: 'Jak oceniasz swoje do≈õwiadczenie z architekturƒÖ MFE (Module Federation, Single-SPA, itp.)?',
    options: [
      { label: 'Mam do≈õwiadczenie i wiem, co robiƒô', score: 3 },
      { label: 'Teoretycznie wiem, ale nie wdra≈ºa≈Çem(a)m', score: 1 },
      { label: 'Brzmi jak koszmar DevOps√≥w', score: 0 },
    ],
  },
  {
    question: 'Czy kiedykolwiek mieli≈õcie problem z tym, ≈ºe jeden feature op√≥≈∫nia deploy ca≈Çej aplikacji?',
    options: [
      { label: 'Tak, czƒôsto', score: 2 },
      { label: 'Sporadycznie', score: 1 },
      { label: 'Nie, mamy dobrze podzielony kod', score: 0 },
    ],
  },
  {
    question: 'Jak czƒôsto zmieniacie UX/UI tylko w jednym module bez ruszania reszty?',
    options: [
      { label: 'Regularnie ‚Äì to u nas norma', score: 3 },
      { label: 'Raczej rzadko', score: 1 },
      { label: 'To niemo≈ºliwe przy naszej strukturze', score: 0 },
    ],
  },
  {
    question: 'Czy tw√≥j zesp√≥≈Ç ma dojrza≈Ço≈õƒá operacyjnƒÖ do zarzƒÖdzania wersjowaniem, integracjƒÖ i testami MFE?',
    options: [
      { label: 'Tak ‚Äì mamy procesy i narzƒôdzia', score: 3 },
      { label: 'Nie, ale chcemy to zbudowaƒá', score: 1 },
      { label: 'Nie ‚Äì to by≈Çby chaos', score: 0 },
    ],
  },
];

const thresholds = [
  {
    min: 25,
    title: '‚úÖ TAK ‚Äì ale tylko je≈õli wiesz, co robisz.',
    description:
      'Twoje odpowiedzi wskazujƒÖ na du≈ºƒÖ liczbƒô zespo≈Ç√≥w, niezale≈ºno≈õƒá modu≈Ç√≥w i potrzebƒô niezale≈ºnych deploy√≥w. Je≈õli masz dojrza≈Ço≈õƒá operacyjnƒÖ, warto p√≥j≈õƒá w Micro Frontendy (ale z jasno zdefiniowanƒÖ odpowiedzialno≈õciƒÖ, testami end-to-end i orkiestratorem).',
  },
  {
    min: 15,
    title: '‚ö†Ô∏è Byƒá mo≈ºe ‚Äì ale tylko w du≈ºej skali.',
    description:
      'Jest potencja≈Ç do MFE, ale tylko je≈õli planujesz du≈ºe zespo≈Çy, d≈Çugi cykl ≈ºycia aplikacji i silnƒÖ potrzebƒô skalowania niezale≈ºnych domen. W innym wypadku to overengineering.',
  },
  {
    min: 5,
    title: 'üîß Zacznij od Nx/Monorepo ‚Äì MFE zostaw na p√≥≈∫niej.',
    description:
      'Masz czas, jeden stack, niez≈Çy poziom organizacji ‚Äì to idealne ≈õrodowisko na monorepo + modularyzacjƒô. MFE mo≈ºe byƒá kolejnym krokiem, ale nie startuj z nim od razu.',
  },
  {
    min: 0,
    title: '‚ùå NIE ‚Äì to by≈Çaby architektoniczna nadprodukcja.',
    description:
      'Masz jeden zesp√≥≈Ç, wsp√≥lny stack i niski poziom niezale≈ºno≈õci. Micro Frontendy nie rozwiƒÖ≈ºƒÖ twoich problem√≥w ‚Äì raczej je zwiƒôkszƒÖ. Skup siƒô na dobrej architekturze modu≈Çowej i automatyzacji.',
  },
];

function getFinalRecommendation(score) {
  return thresholds.find((t) => score >= t.min) || {
    title: 'Nie wiem, ale pewnie i tak to zrobisz‚Ä¶',
    description: 'Nie jestem w stanie zdecydowaƒá co bƒôdzie dla Ciebie lepsze, wiƒôc nawet nie ryzykujƒô!'
  };
}

export default function Home() {
  const [step, setStep] = useState(0);
  const [answers, setAnswers] = useState([]);
  const [score, setScore] = useState(0);
  const [showResult, setShowResult] = useState(false);

  const handleAnswer = (option) => {
    const updatedAnswers = [...answers, option.label];
    setAnswers(updatedAnswers);
    setScore(score + option.score);
    if (step + 1 >= questions.length) {
      setShowResult(true);
    } else {
      setStep(step + 1);
    }
  };

  const resetQuiz = () => {
    setStep(0);
    setAnswers([]);
    setScore(0);
    setShowResult(false);
  };

  const finalResult = getFinalRecommendation(score);

  return (
    <div className="p-6 max-w-xl mx-auto">
      <h1 className="text-2xl font-bold mb-2">Czy potrzebujƒô Micro Frontendy?</h1>
      <p className="mb-6 text-muted-foreground">
        czyli czy naprawdƒô musisz dzieliƒá sw√≥j kod na kawa≈Çki... ju≈º teraz?
      </p>

      <AnimatePresence mode="wait">
        {!showResult ? (
          <motion.div
            key={step}
            initial={{ opacity: 0, x: 50 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -50 }}
            transition={{ duration: 0.3 }}
          >
            <Card>
              <CardContent className="p-4">
                <p className="font-medium mb-4">{questions[step].question}</p>
                <div className="flex flex-col gap-2">
                  {questions[step].options.map((option, index) => (
                    <Button key={index} onClick={() => handleAnswer(option)} variant="outline">
                      {option.label}
                    </Button>
                  ))}
                </div>
              </CardContent>
            </Card>
          </motion.div>
        ) : (
          <motion.div
            key="result"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            exit={{ opacity: 0, scale: 0.9 }}
            transition={{ duration: 0.3 }}
          >
            <Card>
              <CardContent className="p-4">
                <p className="text-xl font-bold mb-4">{finalResult.title}</p>
                <p className="text-xxl mb-4">{finalResult.description}</p>

                <details className="mt-4">
                  <summary className="cursor-pointer font-medium">Twoje odpowiedzi</summary>
                  <div className="mt-4 space-y-4">
                    {questions.map((q, i) => (
                      <div key={i}>
                        <p className="font-medium">{i + 1}. {q.question}</p>
                        <p className="text-muted-foreground mt-1">Odpowied≈∫: {answers[i]}</p>
                      </div>
                    ))}
                  </div>
                </details>

                <details className="mt-6">
                  <summary className="cursor-pointer font-medium">Progi rekomendacji (thresholds)</summary>
                  <div className="mt-4 space-y-4">
                    {thresholds.map((t, idx) => (
                      <div key={idx}>
                        <p className="font-semibold">{t.min}+ pkt ‚Äì {t.title}</p>
                        <p className="text-muted-foreground mt-1">{t.description}</p>
                      </div>
                    ))}
                  </div>
                </details>

                <Button className="mt-6" onClick={resetQuiz}>
                  Zr√≥b quiz jeszcze raz
                </Button>
              </CardContent>
            </Card>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
}